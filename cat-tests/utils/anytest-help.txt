AnyTest

====== DEBUG MODE ======

добавь в адресную строку к query &debug=1

например, test-name.html?mode=4&debug=1

=============== ИСПОЛЬЗОВАНИЕ =======================

- anytest.init() - подключает стили.

- anytest.setUp(width=400, height=300, target=container) - вызывает внутри себя init() и создает и суспендит стейдж
  параметрами width/height можно рулить размерами. Таргет container/stage/both. Вводится licenseKey и отключается credits.
  Для манипуляций обращайся к QA-инженеру.

=== Если используется anytest.setUp =====

- anytest.drawInStage(target) - рисует чарт или стендалон на дефолтный стейдж. пропускает это все через внутренний loadManager
  так что ОЧЕНЬ НЕ РЕКОМЕНДУЕТСЯ рисовать что либо в стейдж не через этот метод.

- anytest.stageListen(callback=DEFAULT, listenOnce=false) - в колбеке опрередется набор шагов для теста afterdraw

=== Если используется anytest.init =====

- anytest.chartListen(target=window.chart, callback=DEFAULT, listenOnce=false)

=== stageListen/chartListen callbacks ===

DEFAULT callback - сделать скрин и завершить тест
function(){
  anytest.step(function(){
    anytest.CAT.getScreen();
  });
  anytest.exit();
}

==== STEPS ====

- anytest.step(callback, inModes=False, timeDelayBefore=5) - шаг в котором определяется что выполнить,
    выполнять ли его в режимах и с какой задержкой (для анимаций, карт или resize events) в милисекундах.

==== Интерактивность и CAT-команды ====

- anytest.interactivePanel() - вызывает интерфейс для работы с интерактивностью. Данная панель позволяет получать
  координаты точек для мышыиных событий. Нужна только для отладки!

- anytest.CAT.action(X,Y,event='click',theme='defaultTheme',button='left') - эмулирует событие мыши в указанных координитах.
 Event: 'click/mousemove/mouseup/mousedown', Button: 'left/midle/right' (ПРАВЫЙ КЛИК НЕ ВЫЗЫВАЕТ КОНТЕКСТНОЕ МЕНЮ!)

- anytest.CAT.actionKeyBoard(Key, Special='') - эмулирует нажатие клавиши. ЭКСПЕРИМЕНТАЛЬНОЕ! работает плохо.

- anytest.CAT.getScreen(filename='basic', isEqualWithCompare=NotCompare, compareFilename='basic') -


==== MODES ====

- anytest.charts4modes(var_args='chart') - принимает СТРОКОВЫЕ ИМЕНА переменных чартов и стендалонов к которым применять режимы

- Чтобы поменять режим для локального запуска, необходимо отменять значение переменной MODE в файле
 test_phantomjs (Mac/Unix) или win_test_phantomjs.py (Windows) в соотвтетствии с описанием переменной.

- Описание принципа работы режимов

-- MODE=0 Simple --
Самый обычный запуск теста. Просто прогоняет все шаги и выходит.

-- MODE=1 Resize --
После обычного прогона шагов, повторяет все найденные шаги (кроме выхода) для каждого таргета указанного в anytest.charts4modes().

1) R-CHART. Любой стендалон или чарт, у коготорого нет свойства 'at_exclude_R-CHART' подвергается следующим опреациям:
 - увеличивается ширина и высота на 50px (или 5% от исходного)
 - снимается картинка R-CHART-plus
 - уменьшается ширина и высота на 100px (или 10% от исходного)
 - снимается картинка R-CHART-minus
 - увеличивается ширина и высота на 50px (или 5%) для восстановления исходного размера
 - прогонются все найденные шаги, картинки именуются с префиксом R-CHART-

2) R-STAGE.
 - увеличивается ширина и высота на 150px
 - снимается картинка R-STAGE-plus
 - уменьшается ширина и высота на 200px
 - снимается картинка R-STAGE-minus
 - увеличивается ширина и высота на 50px для восстановления исходного размера
 - прогонются все найденные шаги, картинки именуются с префиксом R-STAGE-

3) R-DIV. Изменяются размеры div[id='container']
 - увеличивается ширина и высота на 50px
 - снимается картинка R-DIV-plus
 - уменьшается ширина и высота на 100px
 - снимается картинка R-DIV-minus
 - увеличивается ширина и высота на 50px для восстановления исходного размера
 - прогонются все найденные шаги, картинки именуются с префиксом R-DIV-

-- MODE=2  --
Временно свободный

-- MODE=4 JSON-Scheme --
После обычного прогона шагов, повторяет все найденные шаги (кроме выхода) для каждого таргета указанного в anytest.charts4modes().
 - в переменную сохрянаяется конфиг таргета ДО РЕНДЕРИНГА JSON_small и JSON_large с разными параметрами экспорта соответственно.
 - проверяется различие в конфигах JSON_small и JSON_large
 --- SMALL
 - берется "валидный" JSON из JSON_small конфига через JSON.parse/JSON.stringify и сравнивается с JSON_small
 - JSON_small через валидатор прогоняется по JSON-схеме
 - window[target].dispose, delete window[target]
 - восстанавливается и рисуется таргет из JSON_small
 - прогоняются все шаги и снимаются скриншоты с префиксом JSON-sm-
 --- LARGE
 - берется "валидный" JSON из JSON_large конфига через JSON.parse/JSON.stringify и сравнивается с JSON_large
 - JSON_large через валидатор прогоняется по JSON-схеме
 - window[target].dispose, delete window[target]
 - восстанавливается и рисуется таргет из JSON_large
 - прогоняются все шаги и снимаются скриншоты с префиксом JSON-lg-
 --- DOUBLE CHECK - временно не работает изза косяков с сериализацией данных
 - из восстановленного таргета берутся новые JSON_small_r и JSON_large_r которые должны совпадать с JSON_small и JSON_large
 
-- MODE=8 XML-Scheme --
 После обычного прогона шагов, повторяет все найденные шаги (кроме выхода) для каждого таргета указанного в anytest.charts4modes().
  - в переменную сохрянаяется конфиг таргета ДО РЕНДЕРИНГА XML_small и XML_large с разными параметрами экспорта соответственно.
  - проверяется различие в конфигах XML_small и XML_large
  --- SMALL
  - XML_small через валидатор прогоняется по XML-схеме
  - window[target].dispose, delete window[target]
  - восстанавливается и рисуется таргет из XML_small
  - прогоняются все шаги и снимаются скриншоты с префиксом XML-sm-
  --- LARGE
  - XML_large через валидатор прогоняется по XML-схеме
  - window[target].dispose, delete window[target]
  - восстанавливается и рисуется таргет из XML_large
  - прогоняются все шаги и снимаются скриншоты с префиксом XML-lg-
  --- DOUBLE CHECK - временно не работает изза косяков с сериализацией данных
  - из восстановленного таргета берутся новые XML_small_r и XML_large_r которые должны совпадать с XML_small и XML_large

-- MODE=16 HiddenContainer-1 --
  - В anytest.init() div[id='container'] выставлется display='none';
  - Первыми шагами в очередь (на afterdraw) записываются выставление стиля display='block'
  - Прогоняются все шаги
  - Контейнер скрывается СНОВА через display='none';
  - Прогоняются все шаги с перфиксом 'HC-'

-- MODE=32 HiddenContainer-2 --
  - В anytest.init() Первыми шагами в очередь (на afterdraw) записываются выставление стиля display='block'
  - Прогоняются все шаги (обычная отрисовка)
  - Контейнер скрывается через display='none';
  - Прогоняются все шаги с перфиксом 'HC-'